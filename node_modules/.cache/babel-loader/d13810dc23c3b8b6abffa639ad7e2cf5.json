{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Documents/GitHub/todo-for-courses/todo-number2/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport { ToDoList } from './ToDoList';\n\nfunction App() {\n  function changeCheckBox(id, checked) {\n    let task = tasks.find(t => t.id === id);\n\n    if (task) {\n      task.checked = checked;\n    } //создаем видимость того, что здесь лежит что-то новое\n    // let copy=[...tasks]\n    // setTasks(copy)\n    //сокращенный вариант\n\n\n    setTasks([...tasks]);\n  }\n\n  let [filter, setFilter] = useState('Active');\n\n  function addTask(newtext) {\n    if (newtext.trim() !== '') {\n      let newTask = {\n        task: newtext,\n        id: v1(),\n        description: '',\n        checked: false\n      };\n      setTasks([newTask, ...tasks]);\n    }\n  }\n\n  function changeFilter(value, toDoListId) {\n    let toDoList = toDoLists.find(el => el.id === toDoListId);\n\n    if (toDoList) {\n      toDoList.filter = value;\n      setToDoList([...toDoLists]);\n    }\n\n    setFilter(value);\n  }\n\n  let tasksForFilter = tasks;\n\n  function deleteTask(id) {\n    let filtredTasks = tasks.filter(el => {\n      return el.id !== id;\n    });\n    setTasks(filtredTasks);\n  }\n\n  let toDoListId1 = v1();\n  let toDoListId2 = v1();\n  let [toDoLists, setToDoList] = useState([{\n    title: 'what to learn',\n    id: toDoListId1,\n    filter: 'Completed'\n  }, {\n    title: 'what to buy',\n    id: toDoListId2,\n    filter: 'Active'\n  }, {\n    title: 'what i want',\n    id: v1(),\n    filter: 'Completed'\n  }]);\n  let [tasks, setTasks] = useState({\n    [toDoListId1]: [{\n      task: 'js',\n      id: v1(),\n      description: 'something',\n      checked: true\n    }, {\n      task: 'sccs',\n      id: v1(),\n      description: 'something',\n      checked: true\n    }, {\n      task: 'html',\n      id: v1(),\n      description: 'something',\n      checked: false\n    }],\n    //когда оборачиваем значение в квадратные скобки - значение само по себе становится ключом, а не тудулист2 становится ключом\n    [toDoListId2]: [{\n      task: 'books',\n      id: v1(),\n      description: 'something',\n      checked: true\n    }, {\n      task: 'magazines',\n      id: v1(),\n      description: 'something',\n      checked: true\n    }]\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, toDoLists.map(el => {\n    let tasksForToDoList = el;\n\n    if (filter === 'Completed') {\n      //без ретурна!!! присваеваем фильтр\n      tasksForFilter = tasks[el.id].filter(el => el.checked === true);\n    }\n\n    if (filter === 'Active') {\n      tasksForFilter = tasks[el.id].filter(el => el.checked === false);\n    }\n\n    return /*#__PURE__*/React.createElement(ToDoList //не забудь добавить кей в мап\n    , {\n      key: el.id,\n      id: el.id,\n      title: el.title,\n      tasks: tasksForFilter,\n      deleteTask: deleteTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeCheckBox: changeCheckBox,\n      filter: el.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 28\n      }\n    });\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","v1","ToDoList","App","changeCheckBox","id","checked","task","tasks","find","t","setTasks","filter","setFilter","addTask","newtext","trim","newTask","description","changeFilter","value","toDoListId","toDoList","toDoLists","el","setToDoList","tasksForFilter","deleteTask","filtredTasks","toDoListId1","toDoListId2","title","map","tasksForToDoList"],"sources":["/Users/kseniatuzova/Documents/GitHub/todo-for-courses/todo-number2/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport './App.css';\r\nimport { ToDoList } from './ToDoList';\r\n\r\n\r\n\r\nexport type FilterType = 'All' | 'Active' | 'Completed'\r\n\r\n\r\nexport type ToDoListsType = {\r\n    title: string,\r\n    id: string,\r\n    filter: FilterType\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    function changeCheckBox(id: string, checked: boolean) {\r\n\r\n        let task = tasks.find(t => t.id === id)\r\n        if (task) {\r\n            task.checked = checked;\r\n        }\r\n        //создаем видимость того, что здесь лежит что-то новое\r\n        // let copy=[...tasks]\r\n        // setTasks(copy)\r\n\r\n        //сокращенный вариант\r\n        setTasks([...tasks])\r\n\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterType>('Active')\r\n\r\n\r\n\r\n    function addTask(newtext: string) {\r\n        if (newtext.trim() !== '') {\r\n            let newTask = {\r\n                task: newtext,\r\n                id: v1(),\r\n                description: '',\r\n                checked: false,\r\n            }\r\n            setTasks([newTask, ...tasks])\r\n        }\r\n\r\n    }\r\n\r\n    function changeFilter(value: FilterType, toDoListId: string) {\r\n        let toDoList=toDoLists.find((el)=>el.id===toDoListId)\r\n        if(toDoList){\r\n            toDoList.filter=value;\r\n            setToDoList([...toDoLists]) \r\n        }\r\n        setFilter(value)\r\n    }\r\n\r\n    let tasksForFilter = tasks\r\n\r\n\r\n\r\n\r\n\r\n    function deleteTask(id: string) {\r\n\r\n        let filtredTasks = tasks.filter((el) => { return el.id !== id })\r\n        setTasks(filtredTasks)\r\n\r\n\r\n    }\r\n\r\n\r\nlet toDoListId1=v1()\r\nlet toDoListId2=v1()\r\n\r\n    let [toDoLists, setToDoList]=useState<Array<ToDoListsType>>([\r\n        {\r\n            title: 'what to learn',\r\n            id: toDoListId1,\r\n            filter: 'Completed'\r\n        },\r\n        {\r\n            title: 'what to buy',\r\n            id: toDoListId2,\r\n            filter: 'Active'\r\n        },\r\n        {\r\n            title: 'what i want',\r\n            id: v1(),\r\n            filter: 'Completed'\r\n        },\r\n    ])\r\n\r\n\r\n\r\n    let [tasks, setTasks]=useState({\r\n        [toDoListId1]: [\r\n            {\r\n            task: 'js',\r\n            id: v1(),\r\n            description: 'something',\r\n            checked: true,\r\n        },\r\n        {\r\n            task: 'sccs',\r\n            id: v1(),\r\n            description: 'something',\r\n            checked: true,\r\n        },\r\n        {\r\n            task: 'html',\r\n            id: v1(),\r\n            description: 'something',\r\n            checked: false,\r\n        },\r\n    ],\r\n    //когда оборачиваем значение в квадратные скобки - значение само по себе становится ключом, а не тудулист2 становится ключом\r\n    [toDoListId2]: [\r\n        {\r\n        task: 'books',\r\n        id: v1(),\r\n        description: 'something',\r\n        checked: true,\r\n    },\r\n    {\r\n        task: 'magazines',\r\n        id: v1(),\r\n        description: 'something',\r\n        checked: true,\r\n    },\r\n   \r\n],\r\n}\r\n)\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            {\r\n                toDoLists.map((el: any) => {\r\n\r\n                    let tasksForToDoList=el\r\n\r\n                    \r\n    if (filter === 'Completed') {\r\n        //без ретурна!!! присваеваем фильтр\r\n        tasksForFilter = tasks[el.id].filter(\r\n            el => el.checked === true\r\n        )\r\n    }\r\n\r\n\r\n    if (filter === 'Active') {\r\n        tasksForFilter = tasks[el.id].filter(\r\n            el => el.checked === false\r\n        )\r\n    }\r\n\r\n\r\n                    return <ToDoList\r\n                        //не забудь добавить кей в мап\r\n                        key={el.id}\r\n                        id={el.id}\r\n                        title={el.title}\r\n                        tasks={tasksForFilter}\r\n                        deleteTask={deleteTask}\r\n                        changeFilter={changeFilter}\r\n                        addTask={addTask}\r\n                        changeCheckBox={changeCheckBox}\r\n                        filter={el.filter} />\r\n                })\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}