{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Documents/GitHub/todo-for-courses/src/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AddItemForm } from './AddItemForm';\nimport { Button } from './components/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ToDoList(_ref) {\n  _s();\n  let {\n    title,\n    tasks,\n    deleteTask,\n    changeFilter,\n    addTask,\n    changeCheckBox,\n    filter,\n    id,\n    deleteToDoList\n  } = _ref;\n  //вынесли хэндлер за пределы мапа, чтобы не ограничиваться скоупом. Для этого мы в хэндлере передаем в параметре айдишку в пределах мапа, а потом мы передаем в делит таск нужную айдишку таким образом , хоть и за пределами мапа\n  const onDeleteHandler = idItem => {\n    deleteTask(id, idItem);\n  };\n  //даже те функции которые в обработчиках в методе мап нужно облегчать - пишем прямо в мап функцию, которая будет считываться при нажатии на кнопку\n  //задание- зарефакторить кселикс по этому методу\n  let mapFunction = tasks.map(el => {\n    const onChangeHandler = e => {\n      changeCheckBox(id, el.id, e.currentTarget.checked);\n    };\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: el.checked ? 'checked' : '',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: el.checked,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: el.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteHandler(el.id),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, el.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  });\n  let [value, setValue] = useState('');\n  let [err, setErr] = useState('');\n\n  //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \n\n  const plusButton = () => {\n    if (value.trim() !== '') {\n      addTask(id, value.trim());\n      setValue('');\n    } else setErr('err');\n  };\n  const onClickHandler = param => {\n    changeFilter(id, param);\n  };\n  function addTodoList() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddItemForm, {\n        addItem: addTask,\n        id: id,\n        deleteToDoList: deleteToDoList,\n        addToDoList: addTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mapFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickHandler('All'),\n          className: filter === 'All' ? 'active_btn' : '',\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'Active' ? 'active_btn' : '',\n          onClick: () => onClickHandler('Active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'Completed' ? 'active_btn' : '',\n          onClick: () => onClickHandler('Completed'),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"MEmHprIn0oMNEAkmu3R+W1NN3N8=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","AddItemForm","Button","ToDoList","title","tasks","deleteTask","changeFilter","addTask","changeCheckBox","filter","id","deleteToDoList","onDeleteHandler","idItem","mapFunction","map","el","onChangeHandler","e","currentTarget","checked","task","value","setValue","err","setErr","plusButton","trim","onClickHandler","param","addTodoList"],"sources":["/Users/kseniatuzova/Documents/GitHub/todo-for-courses/src/ToDoList.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, KeyboardEvent} from 'react';\r\nimport { AddItemForm } from './AddItemForm';\r\nimport { FilterType } from './App';\r\nimport { Button } from './components/button';\r\n\r\n\r\nexport type TasksType = {\r\n    task: string,\r\n    id: string,\r\n    description: string,\r\n    checked: boolean,\r\n}\r\n\r\nexport type ToDoListType = {\r\n    title: string,\r\n    tasks: Array<TasksType>,\r\n    deleteTask: (toDoListId: string, id: string) => void,\r\n    changeFilter: ( toDoListId:string, value: FilterType) => void\r\n    addTask: (toDoListId: string, newText: string) => void \r\n    changeCheckBox:(toDoListId: string, id:string, checked:boolean )=>void//???\r\n    filter:string\r\n    id:string\r\n    deleteToDoList:(id:string)=>void\r\n}\r\n\r\n\r\nexport function ToDoList({ title, tasks, deleteTask, changeFilter, addTask, changeCheckBox, filter, id ,deleteToDoList}: ToDoListType) {\r\n\r\n//вынесли хэндлер за пределы мапа, чтобы не ограничиваться скоупом. Для этого мы в хэндлере передаем в параметре айдишку в пределах мапа, а потом мы передаем в делит таск нужную айдишку таким образом , хоть и за пределами мапа\r\n    const onDeleteHandler=(idItem:string)=>{\r\n        deleteTask(id, idItem)\r\n    }\r\n//даже те функции которые в обработчиках в методе мап нужно облегчать - пишем прямо в мап функцию, которая будет считываться при нажатии на кнопку\r\n//задание- зарефакторить кселикс по этому методу\r\n    let mapFunction = tasks.map((el: any) => {\r\n      \r\n        const onChangeHandler=(e: ChangeEvent<HTMLInputElement>)=>{ \r\n            changeCheckBox(id, el.id, e.currentTarget.checked);\r\n        }\r\n        \r\n\r\n        return <li className={el.checked?'checked':''} key={el.id}>\r\n            <input type=\"checkbox\" checked={el.checked} onChange={onChangeHandler}\r\n/>\r\n            <span>{el.task}</span>\r\n            <button onClick={()=>onDeleteHandler(el.id)}>x</button>\r\n            </li>\r\n    })\r\n\r\n    let [value, setValue] = useState('')\r\n\r\n    let [err,setErr]=useState('')\r\n\r\n    //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \r\n\r\n    const plusButton = () => {\r\n        \r\n        if(value.trim()!==''){\r\n            addTask(id, value.trim()); \r\n            setValue('');\r\n        } else setErr('err')\r\n    \r\n       \r\n    }\r\n    \r\n    const onClickHandler=(param:FilterType)=>{\r\n        changeFilter(id, param)\r\n    }\r\n\r\n\r\n   function addTodoList(){\r\n\r\n   }\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <h3>{title}</h3>\r\n                \r\n                <AddItemForm addItem={addTask} id={id} deleteToDoList={deleteToDoList} addToDoList={addTodoList} />\r\n               \r\n                <ul>\r\n                    {mapFunction}\r\n\r\n                </ul>\r\n                <div>\r\n                    <button onClick={()=>onClickHandler('All') } className={filter==='All'?'active_btn':''}>All</button>\r\n                    <button className={filter==='Active'?'active_btn':''} onClick={()=>onClickHandler('Active') }>Active</button>\r\n                    <button className={filter==='Completed'?'active_btn':''} onClick={()=>onClickHandler('Completed') }>Completed</button>\r\n                    <Button name=''/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmC,OAAO;AAClE,SAASC,WAAW,QAAQ,eAAe;AAE3C,SAASC,MAAM,QAAQ,qBAAqB;AAAC;AAuB7C,OAAO,SAASC,QAAQ,OAA+G;EAAA;EAAA,IAA9G;IAAEC,KAAK;IAAEC,KAAK;IAAEC,UAAU;IAAEC,YAAY;IAAEC,OAAO;IAAEC,cAAc;IAAEC,MAAM;IAAEC,EAAE;IAAEC;EAA4B,CAAC;EAErI;EACI,MAAMC,eAAe,GAAEC,MAAa,IAAG;IACnCR,UAAU,CAACK,EAAE,EAAEG,MAAM,CAAC;EAC1B,CAAC;EACL;EACA;EACI,IAAIC,WAAW,GAAGV,KAAK,CAACW,GAAG,CAAEC,EAAO,IAAK;IAErC,MAAMC,eAAe,GAAEC,CAAgC,IAAG;MACtDV,cAAc,CAACE,EAAE,EAAEM,EAAE,CAACN,EAAE,EAAEQ,CAAC,CAACC,aAAa,CAACC,OAAO,CAAC;IACtD,CAAC;IAGD,oBAAO;MAAI,SAAS,EAAEJ,EAAE,CAACI,OAAO,GAAC,SAAS,GAAC,EAAG;MAAA,wBAC1C;QAAO,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEJ,EAAE,CAACI,OAAQ;QAAC,QAAQ,EAAEH;MAAgB;QAAA;QAAA;QAAA;MAAA,QAChF,eACU;QAAA,UAAOD,EAAE,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACtB;QAAQ,OAAO,EAAE,MAAIT,eAAe,CAACI,EAAE,CAACN,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA,GAJPM,EAAE,CAACN,EAAE;MAAA;MAAA;MAAA;IAAA,QAKhD;EACb,CAAC,CAAC;EAEF,IAAI,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAI,CAACyB,GAAG,EAACC,MAAM,CAAC,GAAC1B,QAAQ,CAAC,EAAE,CAAC;;EAE7B;;EAEA,MAAM2B,UAAU,GAAG,MAAM;IAErB,IAAGJ,KAAK,CAACK,IAAI,EAAE,KAAG,EAAE,EAAC;MACjBpB,OAAO,CAACG,EAAE,EAAEY,KAAK,CAACK,IAAI,EAAE,CAAC;MACzBJ,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAME,MAAM,CAAC,KAAK,CAAC;EAGxB,CAAC;EAED,MAAMG,cAAc,GAAEC,KAAgB,IAAG;IACrCvB,YAAY,CAACI,EAAE,EAAEmB,KAAK,CAAC;EAC3B,CAAC;EAGF,SAASC,WAAW,GAAE,CAEtB;EACC,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB;MAAA,wBACI;QAAA,UAAK3B;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAEhB,QAAC,WAAW;QAAC,OAAO,EAAEI,OAAQ;QAAC,EAAE,EAAEG,EAAG;QAAC,cAAc,EAAEC,cAAe;QAAC,WAAW,EAAEmB;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAEnG;QAAA,UACKhB;MAAW;QAAA;QAAA;QAAA;MAAA,QAEX,eACL;QAAA,wBACI;UAAQ,OAAO,EAAE,MAAIc,cAAc,CAAC,KAAK,CAAG;UAAC,SAAS,EAAEnB,MAAM,KAAG,KAAK,GAAC,YAAY,GAAC,EAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACpG;UAAQ,SAAS,EAAEA,MAAM,KAAG,QAAQ,GAAC,YAAY,GAAC,EAAG;UAAC,OAAO,EAAE,MAAImB,cAAc,CAAC,QAAQ,CAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC7G;UAAQ,SAAS,EAAEnB,MAAM,KAAG,WAAW,GAAC,YAAY,GAAC,EAAG;UAAC,OAAO,EAAE,MAAImB,cAAc,CAAC,WAAW,CAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACtH,QAAC,MAAM;UAAC,IAAI,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAnEe1B,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}