{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Documents/GitHub/IT-incubator-ToDo/todo-number2/src/ToDoList.tsx\";\nimport React, { useState } from 'react';\nexport function ToDoList(_ref) {\n  let {\n    title,\n    tasks,\n    deleteTask,\n    changeFilter,\n    addTask,\n    changeCheckBox\n  } = _ref;\n  //даже те функции которые в обработчиках в методе мап нужно облегчать - пишем прямо в мап функцию, которая будет считываться при нажатии на кнопку\n  //задание- зарефакторить кселикс по этому методу\n  let mapFunction = tasks.map(el => {\n    const onDeleteHandler = () => {\n      deleteTask(el.id);\n    };\n\n    const onChangeHandler = e => {\n      changeCheckBox(el.id, el.checked);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: el.checked,\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 105\n      }\n    }, el.task, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onDeleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"x\")));\n  });\n  let [value, setValue] = useState(''); //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \n\n  const onChabgeHandlerElement = e => {\n    setValue(e.currentTarget.value);\n  };\n\n  const plusButton = () => {\n    {\n      addTask(value);\n      setValue('');\n    }\n  };\n\n  const onAllClickHandler = () => {\n    changeFilter('All');\n  };\n\n  const onActiveClickHandler = () => {\n    changeFilter('Active');\n  };\n\n  const onCompletedClickHandler = () => {\n    changeFilter('Completed');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: onChabgeHandlerElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: plusButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, mapFunction), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Completed\"))));\n}","map":{"version":3,"names":["React","useState","ToDoList","title","tasks","deleteTask","changeFilter","addTask","changeCheckBox","mapFunction","map","el","onDeleteHandler","id","onChangeHandler","e","checked","task","value","setValue","onChabgeHandlerElement","currentTarget","plusButton","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler"],"sources":["/Users/kseniatuzova/Documents/GitHub/IT-incubator-ToDo/todo-number2/src/ToDoList.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport { FilterType } from './App';\r\n\r\n\r\nexport type TasksType = {\r\n    task: string,\r\n    id: string,\r\n    description: string,\r\n    checked: boolean,\r\n}\r\n\r\nexport type ToDoListType = {\r\n    title: string,\r\n    tasks: Array<TasksType>,\r\n    deleteTask: (id: string) => any,\r\n    changeFilter: (value: FilterType) => void\r\n    addTask: (newtext: string) => any\r\n    changeCheckBox:(id:string, checked:boolean)=>void\r\n}\r\n\r\n\r\nexport function ToDoList({ title, tasks, deleteTask, changeFilter, addTask, changeCheckBox }: ToDoListType) {\r\n\r\n\r\n   \r\n//даже те функции которые в обработчиках в методе мап нужно облегчать - пишем прямо в мап функцию, которая будет считываться при нажатии на кнопку\r\n//задание- зарефакторить кселикс по этому методу\r\n    let mapFunction = tasks.map((el: any) => {\r\n        const onDeleteHandler=()=>{\r\n            deleteTask(el.id)\r\n        }\r\n        const onChangeHandler=(e:ChangeEventHandler<HTMLInputElement>)=>{ changeCheckBox(el.id,el.checked);\r\n        }\r\n        return <li key={el.id}><input type=\"checkbox\" checked={el.checked} onChange={onChangeHandler}/> <span>{el.task}\r\n            <button onClick={onDeleteHandler}>x</button></span></li>\r\n    })\r\n\r\n    let [value, setValue] = useState('')\r\n\r\n    //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \r\n\r\n    const onChabgeHandlerElement = (e: ChangeEvent<HTMLInputElement>) => { setValue(e.currentTarget.value) }\r\n\r\n\r\n    const plusButton = () => {\r\n        { addTask(value); setValue(''); }\r\n    }\r\n\r\n    const onAllClickHandler=()=>{\r\n        changeFilter('All')\r\n    }\r\n\r\n    const onActiveClickHandler=()=>{\r\n        changeFilter('Active')\r\n    }\r\n\r\n    const onCompletedClickHandler=()=>{\r\n        changeFilter('Completed')\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <h3>{title}</h3>\r\n                <div>\r\n                    <input value={value} onChange={onChabgeHandlerElement\r\n                    } />\r\n                    <button onClick={plusButton}>+</button>\r\n                </div>\r\n                <ul>\r\n                    {mapFunction}\r\n\r\n                </ul>\r\n                <div>\r\n                    <button onClick={onAllClickHandler }>All</button>\r\n                    <button onClick={onActiveClickHandler}>Active</button>\r\n                    <button onClick={onCompletedClickHandler }>Completed</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AAqBA,OAAO,SAASC,QAAT,OAAqG;EAAA,IAAnF;IAAEC,KAAF;IAASC,KAAT;IAAgBC,UAAhB;IAA4BC,YAA5B;IAA0CC,OAA1C;IAAmDC;EAAnD,CAAmF;EAI5G;EACA;EACI,IAAIC,WAAW,GAAGL,KAAK,CAACM,GAAN,CAAWC,EAAD,IAAa;IACrC,MAAMC,eAAe,GAAC,MAAI;MACtBP,UAAU,CAACM,EAAE,CAACE,EAAJ,CAAV;IACH,CAFD;;IAGA,MAAMC,eAAe,GAAEC,CAAD,IAA0C;MAAEP,cAAc,CAACG,EAAE,CAACE,EAAJ,EAAOF,EAAE,CAACK,OAAV,CAAd;IACjE,CADD;;IAEA,oBAAO;MAAI,GAAG,EAAEL,EAAE,CAACE,EAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAgB;MAAO,IAAI,EAAC,UAAZ;MAAuB,OAAO,EAAEF,EAAE,CAACK,OAAnC;MAA4C,QAAQ,EAAEF,eAAtD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAhB,oBAAyF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOH,EAAE,CAACM,IAAV,eAC5F;MAAQ,OAAO,EAAEL,eAAjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OAD4F,CAAzF,CAAP;EAEH,CARiB,CAAlB;EAUA,IAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAhC,CAhBwG,CAkBxG;;EAEA,MAAMmB,sBAAsB,GAAIL,CAAD,IAAsC;IAAEI,QAAQ,CAACJ,CAAC,CAACM,aAAF,CAAgBH,KAAjB,CAAR;EAAiC,CAAxG;;EAGA,MAAMI,UAAU,GAAG,MAAM;IACrB;MAAEf,OAAO,CAACW,KAAD,CAAP;MAAgBC,QAAQ,CAAC,EAAD,CAAR;IAAe;EACpC,CAFD;;EAIA,MAAMI,iBAAiB,GAAC,MAAI;IACxBjB,YAAY,CAAC,KAAD,CAAZ;EACH,CAFD;;EAIA,MAAMkB,oBAAoB,GAAC,MAAI;IAC3BlB,YAAY,CAAC,QAAD,CAAZ;EACH,CAFD;;EAIA,MAAMmB,uBAAuB,GAAC,MAAI;IAC9BnB,YAAY,CAAC,WAAD,CAAZ;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKH,KAAL,CADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,KAAK,EAAEe,KAAd;IAAqB,QAAQ,EAAEE,sBAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAGI;IAAQ,OAAO,EAAEE,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAHJ,CAFJ,eAOI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKb,WADL,CAPJ,eAWI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,OAAO,EAAEc,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SADJ,eAEI;IAAQ,OAAO,EAAEC,oBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAFJ,eAGI;IAAQ,OAAO,EAAEC,uBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAHJ,CAXJ,CADJ,CADJ;AAqBH"},"metadata":{},"sourceType":"module"}