{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Downloads/todo-number2/src/ToDoList.tsx\";\nimport React, { useState } from 'react';\nexport function ToDoList(_ref) {\n  let {\n    title,\n    tasks,\n    deleteTask,\n    changeFilter,\n    addTask\n  } = _ref;\n  let mapFunction = tasks.map(el => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: el.checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 79\n      }\n    }, el.task, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteTask(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"x\")));\n  });\n  let [value, setValue] = useState(''); //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \n\n  const onChabgeHandlerElement = e => {\n    setValue(e.currentTarget.value);\n  };\n\n  const plusButton = () => {\n    {\n      addTask(value);\n      setValue('');\n    }\n  };\n\n  const onAllClickHandler = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: onChabgeHandlerElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: plusButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, mapFunction), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeFilter('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeFilter('Active'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeFilter('Completed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Completed\"))));\n}","map":{"version":3,"names":["React","useState","ToDoList","title","tasks","deleteTask","changeFilter","addTask","mapFunction","map","el","id","checked","task","value","setValue","onChabgeHandlerElement","e","currentTarget","plusButton","onAllClickHandler"],"sources":["/Users/kseniatuzova/Downloads/todo-number2/src/ToDoList.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport { FilterType } from './App';\r\n\r\n\r\nexport type TasksType = {\r\n    task: string,\r\n    id: string,\r\n    description: string,\r\n    checked: boolean,\r\n}\r\n\r\nexport type ToDoListType = {\r\n    title: string,\r\n    tasks: Array<TasksType>,\r\n    deleteTask: (id: string) => any,\r\n    changeFilter: (value: FilterType) => void\r\n    addTask: (newtext: string) => any\r\n}\r\n\r\n\r\nexport function ToDoList({ title, tasks, deleteTask, changeFilter, addTask }: ToDoListType) {\r\n\r\n    let mapFunction = tasks.map((el: any) => {\r\n        return <li key={el.id}><input type=\"checkbox\" checked={el.checked} /> <span>{el.task}\r\n            <button onClick={() => deleteTask(el.id)}>x</button></span></li>\r\n    })\r\n\r\n    let [value, setValue] = useState('')\r\n\r\n    //мы не должны писать функции в обработчиках событий, поэтому мы должны их выносить \r\n\r\n    const onChabgeHandlerElement = (e: ChangeEvent<HTMLInputElement>) => { setValue(e.currentTarget.value) }\r\n\r\n\r\n    const plusButton = () => {\r\n        { addTask(value); setValue(''); }\r\n    }\r\n\r\n    const onAllClickHandler=()=>{\r\n        \r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <h3>{title}</h3>\r\n                <div>\r\n                    <input value={value} onChange={onChabgeHandlerElement\r\n                    } />\r\n                    <button onClick={plusButton}>+</button>\r\n                </div>\r\n                <ul>\r\n                    {mapFunction}\r\n\r\n                </ul>\r\n                <div>\r\n                    <button onClick={() => changeFilter('All')\r\n                    }>All</button>\r\n                    <button onClick={() => changeFilter('Active')}>Active</button>\r\n                    <button onClick={() => changeFilter('Completed')}>Completed</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AAoBA,OAAO,SAASC,QAAT,OAAqF;EAAA,IAAnE;IAAEC,KAAF;IAASC,KAAT;IAAgBC,UAAhB;IAA4BC,YAA5B;IAA0CC;EAA1C,CAAmE;EAExF,IAAIC,WAAW,GAAGJ,KAAK,CAACK,GAAN,CAAWC,EAAD,IAAa;IACrC,oBAAO;MAAI,GAAG,EAAEA,EAAE,CAACC,EAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAgB;MAAO,IAAI,EAAC,UAAZ;MAAuB,OAAO,EAAED,EAAE,CAACE,OAAnC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAhB,oBAA+D;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOF,EAAE,CAACG,IAAV,eAClE;MAAQ,OAAO,EAAE,MAAMR,UAAU,CAACK,EAAE,CAACC,EAAJ,CAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OADkE,CAA/D,CAAP;EAEH,CAHiB,CAAlB;EAKA,IAAI,CAACG,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAhC,CAPwF,CASxF;;EAEA,MAAMe,sBAAsB,GAAIC,CAAD,IAAsC;IAAEF,QAAQ,CAACE,CAAC,CAACC,aAAF,CAAgBJ,KAAjB,CAAR;EAAiC,CAAxG;;EAGA,MAAMK,UAAU,GAAG,MAAM;IACrB;MAAEZ,OAAO,CAACO,KAAD,CAAP;MAAgBC,QAAQ,CAAC,EAAD,CAAR;IAAe;EACpC,CAFD;;EAIA,MAAMK,iBAAiB,GAAC,MAAI,CAE3B,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKjB,KAAL,CADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,KAAK,EAAEW,KAAd;IAAqB,QAAQ,EAAEE,sBAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAGI;IAAQ,OAAO,EAAEG,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAHJ,CAFJ,eAOI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKX,WADL,CAPJ,eAWI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,OAAO,EAAE,MAAMF,YAAY,CAAC,KAAD,CAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SADJ,eAGI;IAAQ,OAAO,EAAE,MAAMA,YAAY,CAAC,QAAD,CAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAHJ,eAII;IAAQ,OAAO,EAAE,MAAMA,YAAY,CAAC,WAAD,CAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAJJ,CAXJ,CADJ,CADJ;AAsBH"},"metadata":{},"sourceType":"module"}