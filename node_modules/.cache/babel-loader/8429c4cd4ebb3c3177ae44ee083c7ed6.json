{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Downloads/todo-number2/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport { ToDoList } from './ToDoList'; //первое занятие- разбираемся как прокидывать пропсы и использовать типы , как создавать компоненты в других файлах\n//занятие второе - учимся дебажить, писать мап, onclick,\n//когда хотим что-то поменять в интерфейсе - думаем про то как изменить данные\n//учимся удалять таски - пишем функцию, но чтобы удалить что-то нужны входные данные - айдишка, вызываем эту функцию в онклике , передаем туда айди, присваеваем старому массиву новый отфлитрованный внутри функции по таким параметрам - верни мне все кроме той, что пришла в параметрах\n//присваеваем стейту таски сеттаск и юзстейт\n//в функции говорим что функция сеттаск изменяет стейт при помощи фильтред таск\n//учимся фильтровать таски в кнопках \n//нам нужен фильтр и сетфильтр с юзстейтом, которые будет читать кнопки фильтрации\n\nfunction App() {\n  let [tasks, setTasks] = useState([{\n    task: 'js',\n    id: v1(),\n    description: 'something',\n    checked: true\n  }, {\n    task: 'sccs',\n    id: v1(),\n    description: 'something',\n    checked: true\n  }, {\n    task: 'html',\n    id: v1(),\n    description: 'something',\n    checked: false\n  }]);\n  let [filter, setFilter] = useState('all');\n\n  function deleteTask(id) {\n    let filtredTasks = tasks.filter(el => {\n      return el.id !== id;\n    });\n    setTasks(filtredTasks);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToDoList, {\n    title: \"watch\",\n    tasks: tasks,\n    deleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","v1","ToDoList","App","tasks","setTasks","task","id","description","checked","filter","setFilter","deleteTask","filtredTasks","el"],"sources":["/Users/kseniatuzova/Downloads/todo-number2/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport './App.css';\r\nimport { ToDoList } from './ToDoList';\r\n\r\n//первое занятие- разбираемся как прокидывать пропсы и использовать типы , как создавать компоненты в других файлах\r\n\r\n//занятие второе - учимся дебажить, писать мап, onclick,\r\n//когда хотим что-то поменять в интерфейсе - думаем про то как изменить данные\r\n\r\n//учимся удалять таски - пишем функцию, но чтобы удалить что-то нужны входные данные - айдишка, вызываем эту функцию в онклике , передаем туда айди, присваеваем старому массиву новый отфлитрованный внутри функции по таким параметрам - верни мне все кроме той, что пришла в параметрах\r\n//присваеваем стейту таски сеттаск и юзстейт\r\n//в функции говорим что функция сеттаск изменяет стейт при помощи фильтред таск\r\n\r\n//учимся фильтровать таски в кнопках \r\n//нам нужен фильтр и сетфильтр с юзстейтом, которые будет читать кнопки фильтрации\r\n\r\n\r\nfunction App() {\r\n\r\n    \r\nlet [tasks,setTasks] =useState([\r\n    {\r\n        task: 'js',\r\n        id: v1(),\r\n        description:'something',\r\n        checked:true,\r\n    },\r\n    { task: 'sccs' ,\r\n    id: v1(),\r\n    description:'something',\r\n    checked:true,\r\n},\r\n    { task: 'html',\r\n    id: v1(),\r\n    description:'something',\r\n    checked: false, },\r\n]) \r\n\r\nlet [filter, setFilter]=useState('all',)\r\n\r\n\r\nfunction deleteTask(id:string){\r\n\r\nlet filtredTasks=tasks.filter((el)=>{return el.id!==id})\r\nsetTasks(filtredTasks)\r\n}\r\n    return (\r\n        <div className=\"App\">\r\n            <ToDoList title='watch' tasks={tasks} deleteTask={deleteTask}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAGA,SAASC,GAAT,GAAe;EAGf,IAAI,CAACC,KAAD,EAAOC,QAAP,IAAkBL,QAAQ,CAAC,CAC3B;IACIM,IAAI,EAAE,IADV;IAEIC,EAAE,EAAEN,EAAE,EAFV;IAGIO,WAAW,EAAC,WAHhB;IAIIC,OAAO,EAAC;EAJZ,CAD2B,EAO3B;IAAEH,IAAI,EAAE,MAAR;IACAC,EAAE,EAAEN,EAAE,EADN;IAEAO,WAAW,EAAC,WAFZ;IAGAC,OAAO,EAAC;EAHR,CAP2B,EAY3B;IAAEH,IAAI,EAAE,MAAR;IACAC,EAAE,EAAEN,EAAE,EADN;IAEAO,WAAW,EAAC,WAFZ;IAGAC,OAAO,EAAE;EAHT,CAZ2B,CAAD,CAA9B;EAkBA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAoBX,QAAQ,CAAC,KAAD,CAAhC;;EAGA,SAASY,UAAT,CAAoBL,EAApB,EAA8B;IAE9B,IAAIM,YAAY,GAACT,KAAK,CAACM,MAAN,CAAcI,EAAD,IAAM;MAAC,OAAOA,EAAE,CAACP,EAAH,KAAQA,EAAf;IAAkB,CAAtC,CAAjB;IACAF,QAAQ,CAACQ,YAAD,CAAR;EACC;;EACG,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAU,KAAK,EAAC,OAAhB;IAAwB,KAAK,EAAET,KAA/B;IAAsC,UAAU,EAAEQ,UAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAKH;;AAGD,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}